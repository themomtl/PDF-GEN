using PdfGenAPI.Models;
using QuestPDF.Fluent;
using QuestPDF.Helpers;
using QuestPDF.Infrastructure;

namespace PdfGenAPI.Components.PsychiatryEval;

public class PsychiatryRosComponent(PsychiatryEvalModel data) : IComponent
{
    private readonly byte[] noCheck = File.ReadAllBytes(
        Path.Combine(
            AppDomain.CurrentDomain.BaseDirectory,
            "img/checkbox-unchecked-svgrepo-com.png"
        )
    );

    private readonly byte[] yesCheck = File.ReadAllBytes(
        Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "img/checkbox-check-svgrepo-com.png")
    );

    private PsychiatryEvalModel _data = data;

    public void Compose(IContainer container)
    {
        uint rowCount = 0;
        uint lableLen = 4;
        uint columnCount = 24;
        uint imageHeight = 15;
        container.Table(table =>
        {
            table.ColumnsDefinition(column =>
            {
                for (int i = 0; i < columnCount; i++)
                {
                    column.RelativeColumn();
                }
            });
            table
                .Cell()
                .Row(++rowCount)
                .Column(1)
                .ColumnSpan(24)
                .Border(1)
                .BorderColor(Colors.Grey.Darken1)
                .Padding(5)
                .Text(text =>
                {
                    text.Span("ROS Review").Bold();
                });
            //header
            table
                .Cell()
                .Row(++rowCount)
                .Column(1)
                .ColumnSpan(1)
                .Padding(5)
                .Text(text =>
                {
                    text.Span("N").Bold();
                });
            table
                .Cell()
                .Row(rowCount)
                .Column(2)
                .ColumnSpan(1)
                .Padding(5)
                .Text(text =>
                {
                    text.Span("P").Bold();
                });

            switch (_data.NpPsych)
            {
                case "1":
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(yesCheck);
                    //lable
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Psych")
                        .FontColor(Colors.Grey.Darken1);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 3)
                        .ColumnSpan(columnCount - (lableLen + 3))
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text(_data.Temp100);
                    break;
                case "0":
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(yesCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    //lable
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Psych")
                        .FontColor(Colors.Grey.Darken1);
                    break;
                default:
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    //lable
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Psych")
                        .FontColor(Colors.Grey.Darken1);
                    break;
            }
            switch (_data.NpEndocrine)
            {
                case "1":
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(yesCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Endocrine")
                        .FontColor(Colors.Grey.Darken1);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 3)
                        .ColumnSpan(columnCount - (lableLen + 3))
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text(_data.Temp101);
                    break;
                case "0":
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(yesCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Endocrine")
                        .FontColor(Colors.Grey.Darken1);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 3)
                        .ColumnSpan(columnCount - (lableLen + 3))
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text(_data.Temp101);

                    break;
                default:
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Endocrine")
                        .FontColor(Colors.Grey.Darken1);
                    break;
            }
            switch (_data.NpRespiratory)
            {
                case "1":
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(yesCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Respiratory")
                        .FontColor(Colors.Grey.Darken1);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 3)
                        .ColumnSpan(columnCount - (lableLen + 3))
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text(_data.Temp102);
                    break;
                case "0":
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(yesCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Respiratory")
                        .FontColor(Colors.Grey.Darken1);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 3)
                        .ColumnSpan(columnCount - (lableLen + 3))
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text(_data.Temp102);

                    break;
                default:
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Respiratory")
                        .FontColor(Colors.Grey.Darken1);
                    break;
            }
            switch (_data.NpGu)
            {
                case "1":
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(yesCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("GU")
                        .FontColor(Colors.Grey.Darken1);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 3)
                        .ColumnSpan(columnCount - (lableLen + 3))
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text(_data.Temp103);
                    break;
                case "0":
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(yesCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("GU")
                        .FontColor(Colors.Grey.Darken1);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 3)
                        .ColumnSpan(columnCount - (lableLen + 3))
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text(_data.Temp103);

                    break;
                default:
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("GU")
                        .FontColor(Colors.Grey.Darken1);
                    break;
            }
            switch (_data.NpNeuro)
            {
                case "1":
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(yesCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Neuro")
                        .FontColor(Colors.Grey.Darken1);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 3)
                        .ColumnSpan(columnCount - (lableLen + 3))
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text(_data.Temp104);
                    break;
                case "0":
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(yesCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Neuro")
                        .FontColor(Colors.Grey.Darken1);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 3)
                        .ColumnSpan(columnCount - (lableLen + 3))
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text(_data.Temp104);

                    break;
                default:
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Neuro")
                        .FontColor(Colors.Grey.Darken1);
                    break;
            }
            switch (_data.NpConstitutional)
            {
                case "1":
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(yesCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Constitutional")
                        .FontColor(Colors.Grey.Darken1);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 3)
                        .ColumnSpan(columnCount - (lableLen + 3))
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text(_data.Temp105);
                    break;
                case "0":
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(yesCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Constitutional")
                        .FontColor(Colors.Grey.Darken1);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 3)
                        .ColumnSpan(columnCount - (lableLen + 3))
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text(_data.Temp105);

                    break;
                default:
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Constitutional")
                        .FontColor(Colors.Grey.Darken1);
                    break;
            }
            switch (_data.NpAmbulation)
            {
                case "1":
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(yesCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Ambulation")
                        .FontColor(Colors.Grey.Darken1);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 3)
                        .ColumnSpan(columnCount - (lableLen + 3))
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text(_data.Temp106);
                    break;
                case "0":
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(yesCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Ambulation")
                        .FontColor(Colors.Grey.Darken1);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 3)
                        .ColumnSpan(columnCount - (lableLen + 3))
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text(_data.Temp106);

                    break;
                default:
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Ambulation")
                        .FontColor(Colors.Grey.Darken1);
                    break;
            }
            switch (_data.NpAdl)
            {
                case "1":
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(yesCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("ADL's")
                        .FontColor(Colors.Grey.Darken1);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 3)
                        .ColumnSpan(columnCount - (lableLen + 3))
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text(_data.Temp107);
                    break;
                case "0":
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(yesCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("ADL's")
                        .FontColor(Colors.Grey.Darken1);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 3)
                        .ColumnSpan(columnCount - (lableLen + 3))
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text(_data.Temp107);

                    break;
                default:
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("ADL's")
                        .FontColor(Colors.Grey.Darken1);
                    break;
            }
            switch (_data.NpMusculoskeletal)
            {
                case "1":
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(yesCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Musculoskeletal")
                        .FontColor(Colors.Grey.Darken1);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 3)
                        .ColumnSpan(columnCount - (lableLen + 3))
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text(_data.Temp108);
                    break;
                case "0":
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(yesCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Musculoskeletal")
                        .FontColor(Colors.Grey.Darken1);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 3)
                        .ColumnSpan(columnCount - (lableLen + 3))
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text(_data.Temp108);

                    break;
                default:
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Musculoskeletal")
                        .FontColor(Colors.Grey.Darken1);
                    break;
            }
            switch (_data.NpCardio)
            {
                case "1":
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(yesCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Cardio")
                        .FontColor(Colors.Grey.Darken1);
                    break;
                case "0":
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(yesCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Cardio")
                        .FontColor(Colors.Grey.Darken1);
                    break;
                default:
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Cardio")
                        .FontColor(Colors.Grey.Darken1);
                    break;
            }
            switch (_data.NpGi)
            {
                case "1":
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 3)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 4)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(yesCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 5)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("GI")
                        .FontColor(Colors.Grey.Darken1);
                    break;
                case "0":
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 3)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(yesCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 4)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 5)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("GI")
                        .FontColor(Colors.Grey.Darken1);
                    break;
                default:
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 3)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 4)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 5)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("GI")
                        .FontColor(Colors.Grey.Darken1);
                    break;
            }
            switch (_data.NpSkin)
            {
                case "1":
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(yesCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Skin")
                        .FontColor(Colors.Grey.Darken1);
                    break;
                case "0":
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(yesCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Skin")
                        .FontColor(Colors.Grey.Darken1);
                    break;
                default:
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Skin")
                        .FontColor(Colors.Grey.Darken1);
                    break;
            }
            switch (_data.NpHematological)
            {
                case "1":
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 3)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 4)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(yesCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 5)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Hematological")
                        .FontColor(Colors.Grey.Darken1);
                    break;
                case "0":
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 3)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(yesCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 4)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 5)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Hematological")
                        .FontColor(Colors.Grey.Darken1);
                    break;
                default:
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 3)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 4)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 5)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Hematological")
                        .FontColor(Colors.Grey.Darken1);
                    break;
            }
            switch (_data.NpOther)
            {
                case "1":
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(yesCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Other")
                        .FontColor(Colors.Grey.Darken1);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 3)
                        .ColumnSpan(columnCount - (lableLen + 3))
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text(_data.NpOtherText);
                    break;
                case "0":
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(yesCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Other")
                        .FontColor(Colors.Grey.Darken1);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(lableLen + 3)
                        .ColumnSpan(columnCount - (lableLen + 3))
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text(_data.NpOtherText);

                    break;
                default:
                    table
                        .Cell()
                        .Row(++rowCount)
                        .Column(1)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(2)
                        .ColumnSpan(1)
                        .PaddingTop(5)
                        .Height(imageHeight)
                        .Image(noCheck);
                    table
                        .Cell()
                        .Row(rowCount)
                        .Column(3)
                        .ColumnSpan(lableLen)
                        .PaddingTop(5)
                        .PaddingTop(2)
                        .Text("Other")
                        .FontColor(Colors.Grey.Darken1);
                    break;
            }
        });
    }
}
